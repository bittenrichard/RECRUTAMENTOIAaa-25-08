# Dockerfile.frontend

# --- Estágio 1: Build da Aplicação React ---
# Usa uma imagem Node.js para construir o projeto.
FROM node:20-slim AS build

# Define o diretório de trabalho dentro do contêiner.
WORKDIR /app

# Copia os ficheiros de manifesto de pacotes.
COPY package*.json ./

# Instala todas as dependências do projeto.
RUN npm install

# Copia o resto do código-fonte da sua aplicação.
COPY . .

# APLICAÇÃO DA REGRA SUPREMA (Parte 1):
# Declara que este Dockerfile espera receber um argumento.
ARG VITE_API_BASE_URL

# APLICAÇÃO DA REGRA SUPREMA (Parte 2):
# Transforma o argumento numa variável de ambiente que o Vite pode ler.
ENV VITE_API_BASE_URL=$VITE_API_BASE_URL

# Executa o script de build do Vite para gerar os ficheiros estáticos de produção.
RUN npm run build


# --- Estágio 2: Servidor de Produção com Nginx ---
# Usa uma imagem Nginx leve para servir os ficheiros estáticos.
FROM nginx:1.27-alpine

# Remove a configuração padrão do Nginx.
RUN rm /etc/nginx/conf.d/default.conf

# Copia a sua configuração personalizada do Nginx para o local correto.
COPY nginx.conf /etc/nginx/conf.d

# Copia os ficheiros de build do estágio anterior para o diretório que o Nginx serve.
COPY --from=build /app/dist /usr/share/nginx/html

# Expõe a porta 80 para o tráfego externo.
EXPOSE 80

# O comando para iniciar o servidor Nginx em primeiro plano.
CMD ["nginx", "-g", "daemon off;"]
