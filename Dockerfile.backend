# Dockerfile.backend

# --- Estágio 1: Build ---
# Usa uma imagem Node.js completa para construir a aplicação TypeScript de forma segura.
FROM node:20-slim AS builder

# Define o diretório de trabalho.
WORKDIR /app

# Copia os ficheiros de manifesto de pacotes.
COPY package*.json ./

# Instala todas as dependências necessárias para o build.
RUN npm install

# Copia o resto do código-fonte da sua aplicação.
COPY . .

# Executa o script de build para compilar o TypeScript para JavaScript.
RUN npm run build:server


# --- Estágio 2: Produção ---
# Usa uma imagem Node.js limpa e otimizada para a execução.
FROM node:20-slim AS production

# Define o diretório de trabalho.
WORKDIR /app

# Copia os ficheiros de manifesto de pacotes.
COPY package*.json ./

# Instala APENAS as dependências de produção, ignorando as de desenvolvimento.
RUN npm install --omit=dev

# Copia o código já compilado do estágio de build anterior.
COPY --from=builder /app/dist-server ./dist-server

# Expõe a porta em que a sua API está a ser executada.
EXPOSE 3001

# O comando final para iniciar o servidor Node.js em produção.
CMD ["node", "dist-server/server.js"]
